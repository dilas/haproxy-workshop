global
	log 127.0.0.1 local0
	log 127.0.0.1 local1 debug
	stats socket /Users/dilas/Projects/haproxy/admin.sock mode 660 level admin # habilita Unix domain socket para linha de comando
	maxconn 4096              # numero maximo de conexoes simultaneas, depois disso queue na kernel
	# daemon                  # roda em background
	description HAProxy Grupo Caixa Seguradora

defaults
	log global                # usa a configuracao global de log definida acima
	mode http                 # habilita o modo de proxy reverso layer 7 (http)
	timeout connect 5000      # ms para aguardar estabelecer conexao com o backend
	timeout client  50000     # ms para aguardar o cliente (browser por exemplo) 
	timeout server  50000     # ms para aguardar o servidor no backend
	option httplog            # habilita o log verboso de http
	option dontlognull        # nao loga quando uma requisicao nao enviar dados
	balance roundrobin        # define o algoritmo de balanceamento padrao

listen statspage
	bind *:9000
	stats enable                 # habilita a interface grafica de informacoes (por padrao na uri /haproxy?stats)
	stats uri /report         # define a uri para a interface grafica
	stats refresh 10s         # atualiza a cada 10 segundos a interface grafica
	stats auth admin:password # define usuario e senha para acesso a interface grafica
	stats show-desc           # exibe descricao global
	stats show-legends        # exibe legenda nos servidores
	stats admin if TRUE       # habilita funcoes de administracao

frontend frontend-microservices                                  # define o proxy reverso
	bind *:8000                                                  # bind em todas interfaces	
	option forwardfor                                            # captura o ip do cliente e seta no header X-Forwarded-For
	acl is_localhost src 127.0.0.1                               # verifica se localhost
	acl is_get method GET
	# use_backend backend-microservices-localhost if is_localhost is_get  # verifica acl is_localhost
	default_backend backend-microservices                               # backend padrao para requisicoes

backend backend-microservices                  # define um pool de servidores que as requisicoes serao encaminhadas
	balance roundrobin
	description Micro-Servicos Caixa Seguradora
	server server1 127.0.0.1:5001 weight 1              # define um servidor com peso 1 (peso pode ir de 0 256)
	server server2 127.0.0.1:5002 weight 3              # define outro servidor com peso 3 (peso pode ir de 0 256)
	server server2 127.0.0.1:5003 weight 0 disabled     # desligando um servidor no balanceamento

backend backend-microservices-localhost
	description Pool Marco X
	server server3 127.0.0.1:5003              # apenas para localhost